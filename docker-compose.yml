version: '3'
services:
  # 最终会以docker容器的形式展示出来
  # 就是在配置docker容器
  editor-server:
    build:
      context: . # 当前目录
      dockerfile: Dockerfile # dockerfile文件
    image: editor-server # 镜像名称
    container_name: editor-server # 容器名称
    ports:
      - "8083:3000" # 端口映射 本地端口:容器端口
  editor-redis:
    # service name
    image: redis # 引用的官网 redis image
    container_name: editor-redis # 容器名称
    ports:
      - "6373:6379"
    environment:
      # 环境变量
      - TZ=Asia/Shanghai
    # command: redis-cli ping # 测试 redis 是否启动成功
  editor-mysql:
    image: mysql # 引用的官网 mysql image
    container_name: editor-mysql # 容器名称
    restart: always # 重启策略
    privileged: true # 特权模式 (可以访问宿主机的硬件) (不建议使用) (不安全)
    command: --default-authentication-plugin=mysql_native_password # 远程访问 mysql 需要的配置， 指定密码加密方式 (不然会报错)
    ports:
      - "3303:3306" # 端口映射 本地端口:容器端口
    environment:
      # 环境变量
      - MYSQL_DATABASE=editor_server_mysql_db # 定义数据库名称
      - MYSQL_ROOT_PASSWORD=aB123456 # 定义数据库密码
      - TZ=Asia/Shanghai # 定义时区
    volumes:
      # 挂载数据卷
      - .docker-volumes/mysql/data:/var/lib/mysql # 宿主机目录:容器目录 (数据)
      - .docker-volumes/mysql/logs:/var/log/mysql # 宿主机目录:容器目录 (日志)
      - ./mysql/init:/docker-entrypoint-initdb.d # 宿主机目录:容器目录 (初始化脚本)
