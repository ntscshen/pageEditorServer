# This workflow will build a docker container, publish and deploy it to Tencent Kubernetes Engine (TKE) when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Tencent Kubernetes Engine cluster,
#    including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace:
#    - TENCENT_CLOUD_SECRET_ID with Tencent Cloud secret id
#    - TENCENT_CLOUD_SECRET_KEY with Tencent Cloud secret key
#    - TENCENT_CLOUD_ACCOUNT_ID with Tencent Cloud account id
#    - TKE_REGISTRY_PASSWORD with TKE registry password
#
# 3. Change the values for the TKE_IMAGE_URL, TKE_REGION, TKE_CLUSTER_ID and DEPLOYMENT_NAME environment variables (below).

name: Tencent Kubernetes Engine # Name of the workflow

on:
  push:
    branches: ['dev']
    push:
      - '.github/workflows/**'
      - 'README.md'
      - 'Dockerfile'
      - 'deployment.yml'
      - 'src/**'
      - 'bin/**'
permissions:
  contents: read # Read all files under the repository

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest # Set the job to run on the latest version of Ubuntu
    environment: development # Set the workflow to run in the development environment
    steps:
      - name: Checkout
        uses: actions/checkout@v3 # Checkout the repository content to GitHub Actions agent
      - name: set ssh key # Temporarily set ssh key
        run: |
          mkdir -p ~/.ssh/ # 创建 .ssh 文件夹
          echo "${{ secrets.ID_RSA_TENCENT_CLOUD }}" > ~/.ssh/id_rsa # 将从 github secrets 中获取的私钥写入到 id_rsa 文件中
          chmod 600 ~/.ssh/id_rsa # 设置私钥权限 600 只有拥有者有读写权限，其他人没有任何权限
          ssh-keyscan 124.223.78.185 >> ~/.ssh/known_hosts
          cat ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts
      - name: deploy
        run: |
          ssh work@124.223.78.185
          pwd
          ls

    # # Build
    # - name: Build Docker image
    #   run: |
    #     docker build -t ${TKE_IMAGE_URL}:${GITHUB_SHA} .

    # - name: Login TKE Registry
    #   run: |
    #     docker login -u ${{ secrets.TENCENT_CLOUD_ACCOUNT_ID }} -p '${{ secrets.TKE_REGISTRY_PASSWORD }}' ${TKE_IMAGE_URL}

    # # Push the Docker image to TKE Registry
    # - name: Publish
    #   run: |
    #     docker push ${TKE_IMAGE_URL}:${GITHUB_SHA}

    # - name: Set up Kustomize
    #   run: |
    #     curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize

    # - name: Set up ~/.kube/config for connecting TKE cluster
    #   uses: TencentCloud/tke-cluster-credential-action@v1
    #   with:
    #     secret_id: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
    #     secret_key: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
    #     tke_region: ${{ env.TKE_REGION }}
    #     cluster_id: ${{ env.TKE_CLUSTER_ID }}

    # - name: Switch to TKE context
    #   run: |
    #     kubectl config use-context ${TKE_CLUSTER_ID}-context-default

    # # Deploy the Docker image to the TKE cluster
    # - name: Deploy
    #   run: |
    #     ./kustomize edit set image ${TKE_IMAGE_URL}:${GITHUB_SHA}
    #     ./kustomize build . | kubectl apply -f -
    #     kubectl rollout status deployment/${DEPLOYMENT_NAME}
    #     kubectl get services -o wide
